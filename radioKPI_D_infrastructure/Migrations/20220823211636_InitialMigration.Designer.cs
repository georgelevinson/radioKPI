// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using radioKPI_D_infrastructure.Repositories;

#nullable disable

namespace radioKPI_D_infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220823211636_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GuestInfoSubject", b =>
                {
                    b.Property<int>("GuestsId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectsId")
                        .HasColumnType("int");

                    b.HasKey("GuestsId", "SubjectsId");

                    b.HasIndex("SubjectsId");

                    b.ToTable("GuestInfoSubject");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReleaseNotes")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.EpisodeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EpisodeStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Planned"
                        },
                        new
                        {
                            Id = 2,
                            Description = "InScripting"
                        },
                        new
                        {
                            Id = 3,
                            Description = "InProduction"
                        },
                        new
                        {
                            Id = 4,
                            Description = "InPost"
                        },
                        new
                        {
                            Id = 5,
                            Description = "PreRelease"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Released"
                        });
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.GuestInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("GuestDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitlesOrSpecializations")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PlacesOfWorkOrStudy")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GuestInfo");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.GuestSubject", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestSubjects");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.PartialReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("ReportText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int?>("SessionReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("SessionReportId");

                    b.ToTable("PartialReports");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Proposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<string>("OrgNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GuestId")
                        .IsUnique();

                    b.HasIndex("SessionId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Recording", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("SufflereId")
                        .HasColumnType("int");

                    b.Property<string>("TechNotes")
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.HasIndex("SessionId");

                    b.HasIndex("SufflereId")
                        .IsUnique();

                    b.ToTable("Recordings");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("RecordingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.SessionReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("ReportText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.ToTable("SessionReports");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "STEM"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Military"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Politics"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Activism"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Education"
                        },
                        new
                        {
                            Id = 6,
                            Description = "VisualArts"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Music"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Entertainment"
                        });
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Sufflere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DataJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProposalId")
                        .HasColumnType("int");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId")
                        .IsUnique();

                    b.HasIndex("SessionId");

                    b.ToTable("Suffleres");
                });

            modelBuilder.Entity("GuestInfoSubject", b =>
                {
                    b.HasOne("radioKPI_D_infrastructure.Entities.GuestInfo", null)
                        .WithMany()
                        .HasForeignKey("GuestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("radioKPI_D_infrastructure.Entities.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Episode", b =>
                {
                    b.HasOne("radioKPI_D_infrastructure.Entities.EpisodeStatus", "EpisodeStatus")
                        .WithMany("Episodes")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EpisodeStatus");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.GuestSubject", b =>
                {
                    b.HasOne("radioKPI_D_infrastructure.Entities.GuestInfo", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("radioKPI_D_infrastructure.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.PartialReport", b =>
                {
                    b.HasOne("radioKPI_D_infrastructure.Entities.Session", "Session")
                        .WithMany("PartialReports")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("radioKPI_D_infrastructure.Entities.SessionReport", null)
                        .WithMany("PartialReports")
                        .HasForeignKey("SessionReportId");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Proposal", b =>
                {
                    b.HasOne("radioKPI_D_infrastructure.Entities.GuestInfo", "Guest")
                        .WithOne("Proposal")
                        .HasForeignKey("radioKPI_D_infrastructure.Entities.Proposal", "GuestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("radioKPI_D_infrastructure.Entities.Session", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId");

                    b.Navigation("Guest");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Recording", b =>
                {
                    b.HasOne("radioKPI_D_infrastructure.Entities.Episode", "Episode")
                        .WithMany("Recordings")
                        .HasForeignKey("EpisodeId");

                    b.HasOne("radioKPI_D_infrastructure.Entities.Session", "Session")
                        .WithMany("Recordings")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("radioKPI_D_infrastructure.Entities.Sufflere", "Sufflere")
                        .WithOne("Recording")
                        .HasForeignKey("radioKPI_D_infrastructure.Entities.Recording", "SufflereId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Episode");

                    b.Navigation("Session");

                    b.Navigation("Sufflere");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.SessionReport", b =>
                {
                    b.HasOne("radioKPI_D_infrastructure.Entities.Session", "Session")
                        .WithOne("Report")
                        .HasForeignKey("radioKPI_D_infrastructure.Entities.SessionReport", "SessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Sufflere", b =>
                {
                    b.HasOne("radioKPI_D_infrastructure.Entities.Proposal", "Proposal")
                        .WithOne("Sufflere")
                        .HasForeignKey("radioKPI_D_infrastructure.Entities.Sufflere", "ProposalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("radioKPI_D_infrastructure.Entities.Session", "Session")
                        .WithMany("Suffleres")
                        .HasForeignKey("SessionId");

                    b.Navigation("Proposal");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Episode", b =>
                {
                    b.Navigation("Recordings");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.EpisodeStatus", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.GuestInfo", b =>
                {
                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Proposal", b =>
                {
                    b.Navigation("Sufflere");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Session", b =>
                {
                    b.Navigation("PartialReports");

                    b.Navigation("Recordings");

                    b.Navigation("Report");

                    b.Navigation("Suffleres");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.SessionReport", b =>
                {
                    b.Navigation("PartialReports");
                });

            modelBuilder.Entity("radioKPI_D_infrastructure.Entities.Sufflere", b =>
                {
                    b.Navigation("Recording");
                });
#pragma warning restore 612, 618
        }
    }
}
